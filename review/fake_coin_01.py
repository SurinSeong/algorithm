# 가짜 동전 찾기 알고리즘
'''
겉보기에는 똑같은 동전 n개 존재.
한 개는 싸고 가벼운 재료로 만들어진 가짜 동전.
양팔 저울을 이용해서 다른 동전보다 가벼운 가짜 동전을 찾아내는 알고리즘

< 문제 분석 및 모델링 >
- 양팔 저울은 가볍고 무겁고만 알 수 있다.

- 동전 개수는 n개이기 때문에 동전을 일렬로 나열한 다음, 맨 왼쪽을 0번으로 해서 차례대로 번호를 붙이기
- 양팔 저울로 저울질해서 가짜 동전의 위치 번호 알아내기
'''

# 방법 1 : 하나씩 비교 ==> 계산 복잡도 O(n)
def weigh(a, b, c, d):
    '''
    a부터 b까지의 동전 : 양팔 저울의 왼쪽
    c부터 d까지의 동전 : 양팔 저울의 오른쪽
    => 저울질하는 함수
    
    a~b 사이에 가짜 동전이 있다 -> -1
    c~d 사이에 가짜 동전이 있다 -> 1
    양쪽 무게가 같다 -> 0
    '''
    # 가짜 동전의 위치 저장 변수
    fake = 29   # 함수를 이용해 맞혀야 하는 값
    
    # 왼쪽에 있다면
    if (a <= fake <= b):
        return -1
    
    # 오른쪽에 있다면
    if (c <= fake <=d):
        return 1
    
    return 0


# 동전의 위치를 찾아내는 함수
def find_fake_coin(left, right):
    '''
    weigh 함수를 이용해서 가짜 동전의 위치를 찾아낸다.
    '''
    for i in range(left+1, right+1):
        print(i)
        # 가장 왼쪽 동전과 나머지 동전을 차례로 비교한다.
        result = weigh(left, left, i, i)
        print(result)
        # left 동전이 가벼우면
        if result == -1:
            return left
        # i 동전이 가벼우면
        elif result == 1:
            return i
        # 두 동전의 무게가 같으면 다음 동전
    
    # 모든 동전의 무게가 같으면 가짜 동전이 없는 예외의 경우로 판단
    return -1


n = 100 # 전체 동전의 개수
print(find_fake_coin(0, n-1))
