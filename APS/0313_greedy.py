"""
[동전 교환]
- 아래 그림과 같이 총 네 종류의 동전이 있음.
- 최소한의 동전 수를 사용해 교환해주려고 함.
- 1730원을 거슬러주기 위해 사용할 수 있는 최소 동전 수는?

- 단계 설명 1
    1. 500원으로 가능한 만큼 주자
    2. 남은 동전 중 가장 큰 동전인 100원
        => 각 단계를 진행하면서 규칙 유지

- 단계 설명 2
    [간접 증명]
    - 명제 : 가장 큰 동전부터 고르면 최소 동전 수가 나온다.
    - 가정을 바꿔보기 -> 가장 큰 동전부터 고르면 최적해가 나오지 않는다. (가정)
        = 작은 동전부터 골랐을 때 최적해가 나온다고 생각
        = 더 작은 수로 나눴을 때 최소 몫이 나올 수 있다.
            -> 가정 모순 발생

- 각 동전이 배수가 아닌 경우는 예외가 발생할 수 있음.
"""
# 동전 문제

coins = [500, 100, 50, 10]    # 큰 동전부터 작성
target = 1730
cnt = 0

for coin in coins:
    cnt += target//coin
    target %= coin

print(cnt)

# 화장실 문제
# 대기시간 최소인 경우
times = [10, 15, 30, 50]
N = len(times)

total = 0

for i in range(N):
    total += (N-1-i)*times[i]

print(total)

## 선생님 풀이 ##
times = [15, 30, 50, 10]

# 규칙 : 최소 시간인 사람부터 들어가기
# 오름차순 정렬
times.sort()

total_time = 0
remain_people = N - 1

for turn in range(N):
    time = times[turn]
    total_time += time*remain_people
    remain_people -= 1

# knapsack
# 최대 30kg까지 짐을 담아갈 수 있음.
# 물건의 개수, 물건별 무게, 가격이 주어질 때
# 최대 이득은?
# 그리디 생각 : 가격/kg 가 큰 것부터 챙긴다면..? 예외 케이스 발생!
# 만약 짐을 나눠들고 갈 수 있다면 위의 생각을 해도 좋다.
# 백준 문제 풀어보기!

# 회의실 배정
# 가능한 많은 회의가 열리기 위해 배정하는 방법은?
# 1. 회의 시간 / 2. 시작 시간 / 3. 종료 시간 / 4. 겹치는 수
    # 안 겹치는 것 중에 종료 시간이 가장 가까운 것을 선택하면 된다.